query GetDepositsQueryByUser($user: String){
    deposits(first: 1000,where:{user :$user},orderBy: updateTimestamp,orderDirection: desc) {
        id
        status
        user{
            id
        }
        amount
        newDebt
        actualAmountReceived
        treasuryFee
        walletPubKeyHash
        fundingTxHash
        fundingOutputIndex
        blindingFactor
        refundPubKeyHash
        refundLocktime
        vault
        depositTimestamp
        updateTimestamp
        transactions(orderBy: timestamp,orderDirection:desc){
            timestamp
            txHash
            from
            to
            description
        }
    }
    statsRecord(id:"current"){
        mintingStatus
    }
}

query GetAllDepositsQuery{
    deposits(first: 1000,orderBy: updateTimestamp,orderDirection: desc) {
        id
        status
        user{
            id
        }
        amount
        newDebt
        actualAmountReceived
        treasuryFee
        walletPubKeyHash
        fundingTxHash
        fundingOutputIndex
        blindingFactor
        refundPubKeyHash
        refundLocktime
        vault
        depositTimestamp
        updateTimestamp
        transactions(orderBy: timestamp,orderDirection:desc){
            timestamp
            txHash
            from
            to
            description
        }
    }
    statsRecord(id:"current"){
        mintingStatus
    }
}

query GetRedemptionQueryByUser($user: String){
    redemptions (first: 1000,where:{user :$user},orderBy: updateTimestamp,orderDirection: desc) {
        id,
        status,
        user{
            id
        },
        amount,
        walletPubKeyHash,
        redeemerOutputScript,
        redemptionTxHash,
        treasuryFee,
        txMaxFee,
        completedTxHash
        redemptionTimestamp
        updateTimestamp
        transactions(orderBy: timestamp,orderDirection:desc){
            timestamp
            txHash
            from
            to
            description
        }
    }
}

query GetAllRedemptionsQuery{
    redemptions (first: 1000,orderBy: updateTimestamp,orderDirection: desc) {
        id,
        status,
        user{
            id
        },
        amount,
        walletPubKeyHash,
        redeemerOutputScript,
        redemptionTxHash,
        treasuryFee,
        txMaxFee,
        completedTxHash
        redemptionTimestamp
        updateTimestamp
        transactions(orderBy: timestamp,orderDirection:desc){
            timestamp
            txHash
            from
            to
            description
        }
    }
}

query TokenInfoQuery{
    tbtctokens{
        name
        symbol
        decimals
        address
        totalSupply
        totalMint
        totalBurn
        currentTokenHolders
    }
}


query Operators {
    operators(first:1000, orderBy: tBTCAuthorizedAmount, orderDirection: desc){
        id
        registeredOperatorAddress
        tBTCAuthorized
        randomBeaconAuthorized
        tBTCAuthorizedAmount
        randomBeaconAuthorizedAmount
        stakedAmount
        availableReward
        misbehavedCount
        poolRewardBanDuration
        stakedAt
    }
    statsRecord(id:"current"){
        totalStaked
        numOperatorsRegisteredNode
        totalTBTCAuthorizedAmount
        totalRandomBeaconAuthorizedAmount
    }
}

query SearchOperators($id: ID!,$address: Bytes) {
    operators(where:{
        or: [
            {id:$id},
            {address:$address}
        ]
    })
    {
        id
        registeredOperatorAddress
        tBTCAuthorized
        randomBeaconAuthorized
        tBTCAuthorizedAmount
        randomBeaconAuthorizedAmount
        stakedAmount
        availableReward
        misbehavedCount
        poolRewardBanDuration
        stakedAt
    }
    statsRecord(id:"current"){
        totalStaked
        numOperatorsRegisteredNode
        totalTBTCAuthorizedAmount
        totalRandomBeaconAuthorizedAmount
    }
}

query OperatorDetail($id: ID!) {
    operator(id:$id){
        id
        address
        tBTCAuthorized
        randomBeaconAuthorized
        tBTCAuthorizedAmount
        randomBeaconAuthorizedAmount
        stakedAmount
        rewardDispensed
        availableReward
        misbehavedCount
        totalSlashedAmount
        poolRewardBanDuration
        stakedAt
        authorizer
        beneficiary
        owner
        events(orderBy:timestamp,orderDirection:desc){
            id
            txHash
            amount
            from
            to
            event
            timestamp
            isRandomBeaconEvent
        }
        randomBeaconGroupMemberships(orderBy:groupCreatedAt,orderDirection:desc){
            count
            group{
                id
                createdAt
                createdAtBlock
                groupPublicKey{
                    pubKey
                }
                size
                uniqueMemberCount
                misbehavedCount
                totalSlashedAmount
                terminated
                nonce
                notifier
            }
        }
    }
}

query ListRandomBeaconGroup{
    randomBeaconGroups{
        id
        createdAt
        createdAtBlock
        groupPublicKey{
            pubKey
        }
        size
        uniqueMemberCount
        misbehavedCount
        totalSlashedAmount
        terminated
        nonce
        notifier
    }
    statusRecord(id:"status"){
        groupState
    }
}

query RandomBeaconGroupDetail($id: ID!){
    randomBeaconGroup(id:$id){
        id
        createdAt
        createdAtBlock
        groupPublicKey{
            pubKey
        }
        size
        uniqueMemberCount
        misbehavedCount
        totalSlashedAmount
        terminated
        nonce
        notifier
        isWalletRegistry
        memberships(orderBy: count,orderDirection: desc){
            count
            seats
            operator{
                id
                address
                misbehavedCount
                tBTCAuthorizedAmount
                randomBeaconAuthorizedAmount
                availableReward
            }
        }
        relayEntries(orderBy:submittedAt,orderDirection:desc){
            id
            requestedAt
            submittedAt
            value
        }
    }
}

query GetUserDetail($id: ID!){
    user(id:$id){
        tokenBalance
        totalTokensHeld
        mintingDebt
        deposits(first: 1000,orderBy: updateTimestamp,orderDirection: desc) {
            id
            status
            user{
                id
            }
            amount
            newDebt
            actualAmountReceived
            treasuryFee
            walletPubKeyHash
            fundingTxHash
            fundingOutputIndex
            blindingFactor
            refundPubKeyHash
            refundLocktime
            vault
            depositTimestamp
            updateTimestamp
            transactions(orderBy: timestamp,orderDirection:desc){
                timestamp
                txHash
                from
                to
                description
            }
        }
        redemptions (first: 1000,orderBy: updateTimestamp,orderDirection: desc) {
            id,
            status,
            user{
                id
            },
            amount,
            walletPubKeyHash,
            redeemerOutputScript,
            redemptionTxHash,
            treasuryFee,
            txMaxFee,
            completedTxHash
            redemptionTimestamp
            updateTimestamp
            transactions(orderBy: timestamp,orderDirection:desc){
                timestamp
                txHash
                from
                to
                description
            }
        }
    }

}