query GetDepositsQueryByUser($user: String){
    deposits(first: 1000,where:{user :$user},orderBy: updateTimestamp,orderDirection: desc) {
        id
        status
        user{
            id
        }
        amount
        newDebt
        actualAmountReceived
        treasuryFee
        walletPubKeyHash
        fundingTxHash
        fundingOutputIndex
        blindingFactor
        refundPubKeyHash
        refundLocktime
        vault
        depositTimestamp
        updateTimestamp
        transactions(orderBy: timestamp,orderDirection:desc){
            timestamp
            txHash
            from
            to
            description
        }
    }
}

query GetAllDepositsQuery{
    deposits(first: 1000,orderBy: updateTimestamp,orderDirection: desc) {
        id
        status
        user{
            id
        }
        amount
        newDebt
        actualAmountReceived
        treasuryFee
        walletPubKeyHash
        fundingTxHash
        fundingOutputIndex
        blindingFactor
        refundPubKeyHash
        refundLocktime
        vault
        depositTimestamp
        updateTimestamp
        transactions(orderBy: timestamp,orderDirection:desc){
            timestamp
            txHash
            from
            to
            description
        }
    }
}

query GetRedemptionQueryByUser($user: String){
    redemptions (first: 1000,where:{user :$user},orderBy: updateTimestamp,orderDirection: desc) {
        id,
        status,
        user{
            id
        },
        amount,
        walletPubKeyHash,
        redeemerOutputScript,
        redemptionTxHash,
        treasuryFee,
        txMaxFee,
        completedTxHash
        redemptionTimestamp
        updateTimestamp
        transactions(orderBy: timestamp,orderDirection:desc){
            timestamp
            txHash
            from
            to
            description
        }
    }
}

query GetAllRedemptionsQuery{
    redemptions (first: 1000,orderBy: updateTimestamp,orderDirection: desc) {
        id,
        status,
        user{
            id
        },
        amount,
        walletPubKeyHash,
        redeemerOutputScript,
        redemptionTxHash,
        treasuryFee,
        txMaxFee,
        completedTxHash
        redemptionTimestamp
        updateTimestamp
        transactions(orderBy: timestamp,orderDirection:desc){
            timestamp
            txHash
            from
            to
            description
        }
    }
}

query TokenInfoQuery{
    tbtctokens{
        name
        symbol
        decimals
        address
        totalSupply
        totalMint
        totalBurn
        currentTokenHolders
    }
}


query Operators {
    operators(first:1000, orderBy: tBTCAuthorizedAmount, orderDirection: desc){
        id
        tBTCAuthorized
        randomBeaconAuthorized
        tBTCAuthorizedAmount
        randomBeaconAuthorizedAmount
        stakedAmount
        availableReward
        misbehavedCount
        poolRewardBanDuration
        stakedAt
    }
}

query SearchOperators($id: ID!) {
    operators(where:{id:$id}){
        id
        tBTCAuthorized
        randomBeaconAuthorized
        tBTCAuthorizedAmount
        randomBeaconAuthorizedAmount
        stakedAmount
        availableReward
        misbehavedCount
        poolRewardBanDuration
        stakedAt
    }
}

query OperatorDetail($id: ID!) {
    operator(id:$id){
        id
        address
        tBTCAuthorized
        randomBeaconAuthorized
        tBTCAuthorizedAmount
        randomBeaconAuthorizedAmount
        stakedAmount
        rewardDispensed
        availableReward
        misbehavedCount
        totalSlashedAmount
        poolRewardBanDuration
        stakedAt
        authorizer
        beneficiary
        owner
        events(orderBy:timestamp,orderDirection:desc){
            id
            amount
            from
            to
            event
            timestamp
        }
        groups(orderBy:createdAt,orderDirection:desc){
            id
            createdAt
            groupPublicKey{
                pubKey
                terminated
            }
            size
            misbehavedCount
            totalSlashedAmount
        }
    }
}

query RandomBeaconGroupDetail($id: ID!){
    randomBeaconGroup(id:$id){
        id
        createdAt
        groupPublicKey{
            pubKey
            terminated
        }
        size
        misbehavedCount
        totalSlashedAmount
        operators(orderBy:tBTCAuthorized,orderDirection:desc){
            id
            misbehavedCount
            tBTCAuthorizedAmount
            randomBeaconAuthorizedAmount
            availableReward
        }
        relayEntries(orderBy:submittedAt,orderDirection:desc){
            id
            requestedAt
            submittedAt
            value
        }
    }
}